name: "Setup Node.js"
description: "Action to setup Node.js and install dependencies according to the package manager used."
author: Hoverkraft
branding:
  icon: settings
  color: gray-dark

inputs:
  dependencies-cache:
    description: "List of dependencies for which the cache should be managed"
    required: false
    default: ""
  working-directory:
    description: "Working directory where the dependencies are installed."
    required: false
    default: "."

outputs:
  run-script-command:
    description: "The command to run a script in the package.json file"
    value: ${{ steps.get-package-manager.outputs.run-script-command }}
runs:
  using: "composite"
  steps:
    - shell: bash
      # FIXME: workaround until will be merged: https://github.com/actions/runner/pull/1684
      run: mkdir -p ./self-setup-node-action/ && cp -r $GITHUB_ACTION_PATH/../* ./self-setup-node-action/

    - id: get-package-manager
      if: inputs.package-manager == ''
      uses: ./self-setup-node-action/get-package-manager
      with:
        working-directory: ${{ inputs.working-directory }}

    - id: get-node-version-file
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        SUPPORTED_FILES=(".nvmrc" ".node-version")

        # Check if any of the supported files exist
        for file in "${SUPPORTED_FILES[@]}"; do
          if [ -f "$file" ]; then
            NODE_VERSION_FILE=$(realpath -s --relative-to="$GITHUB_WORKSPACE" "$(pwd)/$file")
            echo "node-version-file=$NODE_VERSION_FILE" >> $GITHUB_OUTPUT
            exit 0
          fi
        done

    # FIXME: workaround until will be merged: https://github.com/actions/setup-node/pull/901
    - id: get-pnpm-version
      if: steps.get-package-manager.outputs.package-manager == 'pnpm'
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        if [ -f "package.json" ]; then
          if [ -n "$(jq -r '.packageManager//empty' package.json)" ]; then
            # pnpm/action-setup supports "packageManager" field in package.json
            exit 0
          fi
        fi
        echo "pnpm-version=latest" >> "$GITHUB_OUTPUT"

    - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
      if: steps.get-package-manager.outputs.package-manager == 'pnpm'
      with:
        version: ${{ steps.get-pnpm-version.outputs.pnpm-version }}
        package_json_file: ${{ inputs.working-directory }}/package.json
        run_install: false

    - uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
      with:
        node-version-file: ${{ steps.get-node-version-file.outputs.node-version-file }}
        cache: ${{ steps.get-package-manager.outputs.package-manager }}
        cache-dependency-path: ${{ steps.get-package-manager.outputs.cache-dependency-path }}

    - shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: ${{ steps.get-package-manager.outputs.install-command }}

    - if: inputs.dependencies-cache != ''
      uses: ./self-setup-node-action/dependencies-cache
      with:
        dependencies: ${{ inputs.dependencies-cache }}
        working-directory: ${{ inputs.working-directory }}

    # FIXME: workaround until will be merged: https://github.com/actions/runner/pull/1684
    - shell: bash
      if: always()
      run: |
        rm -fr ./self-setup-node-action
