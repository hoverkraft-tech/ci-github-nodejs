# NodeJS Continuous Integration
# ==========================
# Workflow to performs continuous integration steps agains a NodeJs project:
# - CodeQL analysis
# - Linting
# - Build
# - Test

name: NodeJS Continuous Integration

on:
  workflow_call:
    inputs:
      build:
        description: Build parameters. Must be a string or a json object.
        type: string
        required: false
        default: "build"
      checks:
        description: "Optional flag to enable check steps."
        type: boolean
        required: false
        default: true
      lint:
        description: "Optional flag to enable linting."
        type: boolean
        required: false
        default: true
      code-ql:
        description: "Code QL analysis language. See <https://github.com/github/codeql-action>."
        type: string
        required: false
        default: "typescript"
      dependency-review:
        description: "Enable dependency review scan. See <https://github.com/actions/dependency-review-action>."
        type: boolean
        required: false
        default: true
      test:
        description: "Optional flag to enable test."
        type: boolean
        required: false
        default: true
      coverage:
        description: "Specifify code coverage reporter. Supported values: 'codecov'."
        type: string
        required: false
        default: "codecov"
      working-directory:
        description: "Working directory where the dependencies are installed."
        type: string
        required: false
        default: "."

permissions:
  contents: read
  security-events: write
  # FIXME: This is a workaround for having workflow ref. See https://github.com/orgs/community/discussions/38659
  id-token: write

jobs:
  code-ql:
    name: 🛡️ CodeQL Analysis
    if: inputs.checks == true && inputs.code-ql != ''
    permissions:
      security-events: write
    runs-on: "ubuntu-latest"
    steps:
      - uses: hoverkraft-tech/ci-github-common/actions/checkout@b4883995e100e291a1fed68678d47a560328ed08 # 0.24.0
      - uses: github/codeql-action/init@192325c86100d080feab897ff886c34abd4c83a3 # v3.30.3
        with:
          languages: ${{ inputs.code-ql }}
      - uses: github/codeql-action/analyze@192325c86100d080feab897ff886c34abd4c83a3 # v3.30.3

  dependency-review:
    name: 🛡️ Dependency Review
    if: github.event_name == 'pull_request' && inputs.checks == true && inputs.dependency-review
    permissions:
      contents: read
    runs-on: "ubuntu-latest"
    steps:
      - uses: hoverkraft-tech/ci-github-common/actions/checkout@b4883995e100e291a1fed68678d47a560328ed08 # 0.24.0
      - uses: actions/dependency-review-action@595b5aeba73380359d98a5e087f648dbb0edce1b # v4.7.3

  setup:
    name: ⚙️ Setup
    runs-on: "ubuntu-latest"
    # FIXME: This is a workaround for having workflow ref. See https://github.com/orgs/community/discussions/38659
    permissions:
      contents: read
      id-token: write
    outputs:
      build-commands: ${{ steps.build-variables.outputs.commands }}
      build-artifact: ${{ steps.build-variables.outputs.artifact }}
    steps:
      - uses: hoverkraft-tech/ci-github-common/actions/checkout@b4883995e100e291a1fed68678d47a560328ed08 # 0.24.0

      # FIXME: This is a workaround for having workflow ref. See https://github.com/orgs/community/discussions/38659
      # jscpd:ignore-start
      - id: oidc
        uses: ChristopherHX/oidc@73eee1ff03fdfce10eda179f617131532209edbd # v3
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          path: ./self-workflow
          repository: ${{ steps.oidc.outputs.job_workflow_repo_name_and_owner }}
          ref: ${{ steps.oidc.outputs.job_workflow_repo_ref }}
          sparse-checkout: |
            actions
      - run: |
          if [ -f .gitignore ]; then grep -q "self-workflow" .gitignore || echo "self-workflow" >> .gitignore; else echo "self-workflow" >> .gitignore; fi
          if [ -f .dockerignore ]; then grep -q "self-workflow" .dockerignore || echo "self-workflow" >> .dockerignore; else echo "self-workflow" >> .dockerignore; fi
      # jscpd:ignore-end
      - id: setup-node
        uses: ./self-workflow/actions/setup-node
        with:
          working-directory: ${{ inputs.working-directory }}

      - id: build-variables
        if: inputs.build != ''
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
        with:
          script: |
            const buildInput = `${{ inputs.build }}`.trim();

            let commands = [];

            // Build input can be json or string
            try {
              const build = JSON.parse(buildInput);
              if (Array.isArray(build)) {
                commands = build;
              } else {
                commands = build.commands ?? ["build"];

                if (build.artifact) {
                  if(typeof build.artifact === 'string') {
                    build.artifact = build.artifact.trim().split('\n');
                  }
                  const sanitizedArtifacts = build.artifact
                    .map(artifact => artifact.trim())
                    .filter(Boolean)
                    .map(artifact => {
                      // FIXME: Workaround to preserve full path to artifact
                      const fullpath = artifact.startsWith('/') ? artifact : `${{ github.workspace }}/${artifact}`;

                      // Add a wildcard to the first folder of the path
                      return fullpath.replace(/\/([^/]+)/, '/*$1');
                    });

                  core.setOutput('artifact', sanitizedArtifacts.join('\n'));
                }
              }
            } catch (e) {
              commands = buildInput.split('\n');
            }

            const sanitizedCommands = commands.map(command => command.trim()).filter(Boolean);
            if(!sanitizedCommands.length) {
              core.setFailed('No build commands found');
            }

            core.setOutput('commands', sanitizedCommands.join('\n'));

  lint:
    name: 👕 Lint
    if: inputs.checks == true && inputs.lint != false
    runs-on: "ubuntu-latest"
    needs: setup
    # jscpd:ignore-start
    # FIXME: This is a workaround for having workflow ref. See https://github.com/orgs/community/discussions/38659
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: hoverkraft-tech/ci-github-common/actions/checkout@b4883995e100e291a1fed68678d47a560328ed08 # 0.24.0

      # FIXME: This is a workaround for having workflow ref. See https://github.com/orgs/community/discussions/38659
      - id: oidc
        uses: ChristopherHX/oidc@73eee1ff03fdfce10eda179f617131532209edbd # v3
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          path: ./self-workflow
          repository: ${{ steps.oidc.outputs.job_workflow_repo_name_and_owner }}
          ref: ${{ steps.oidc.outputs.job_workflow_repo_ref }}
          sparse-checkout: |
            actions
      - run: |
          if [ -f .gitignore ]; then grep -q "self-workflow" .gitignore || echo "self-workflow" >> .gitignore; else echo "self-workflow" >> .gitignore; fi
          if [ -f .dockerignore ]; then grep -q "self-workflow" .dockerignore || echo "self-workflow" >> .dockerignore; else echo "self-workflow" >> .dockerignore; fi
      # jscpd:ignore-end
      - id: setup-node
        uses: ./self-workflow/actions/setup-node
        with:
          working-directory: ${{ inputs.working-directory }}
          dependencies-cache: |
            nx
            prettier

      - run: ${{ steps.setup-node.outputs.run-script-command }} lint
        working-directory: ${{ inputs.working-directory }}

  build:
    name: 🏗️ Build
    if: inputs.checks == true
    runs-on: "ubuntu-latest"
    needs: setup
    # jscpd:ignore-start
    permissions:
      # FIXME: This is a workaround for having workflow ref. See https://github.com/orgs/community/discussions/38659
      contents: read
      id-token: write
    steps:
      - uses: hoverkraft-tech/ci-github-common/actions/checkout@b4883995e100e291a1fed68678d47a560328ed08 # 0.24.0
        if: needs.setup.outputs.build-commands

      # FIXME: This is a workaround for having workflow ref. See https://github.com/orgs/community/discussions/38659
      - id: oidc
        if: needs.setup.outputs.build-commands
        uses: ChristopherHX/oidc@73eee1ff03fdfce10eda179f617131532209edbd # v3
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        if: needs.setup.outputs.build-commands
        with:
          path: ./self-workflow
          repository: ${{ steps.oidc.outputs.job_workflow_repo_name_and_owner }}
          ref: ${{ steps.oidc.outputs.job_workflow_repo_ref }}
          sparse-checkout: |
            actions
      - run: |
          if [ -f .gitignore ]; then grep -q "self-workflow" .gitignore || echo "self-workflow" >> .gitignore; else echo "self-workflow" >> .gitignore; fi
          if [ -f .dockerignore ]; then grep -q "self-workflow" .dockerignore || echo "self-workflow" >> .dockerignore; else echo "self-workflow" >> .dockerignore; fi
      # jscpd:ignore-end
      - id: setup-node
        if: needs.setup.outputs.build-commands
        uses: ./self-workflow/actions/setup-node
        with:
          working-directory: ${{ inputs.working-directory }}
          dependencies-cache: |
            nx
            gatsby
            storybook

      - if: needs.setup.outputs.build-commands
        working-directory: ${{ inputs.working-directory }}
        run: |
          BUILD_COMMANDS="${{ needs.setup.outputs.build-commands }}"

          echo "$BUILD_COMMANDS" | while IFS= read -r COMMAND ; do
              # Trim whitespace
              COMMAND=$(echo "$COMMAND" | xargs)

              # Skip empty lines
              if [ -z "$COMMAND" ]; then
                  continue
              fi

              echo -e "\n - Running $COMMAND"
              ${{ steps.setup-node.outputs.run-script-command }} "$COMMAND"
          done

      - if: needs.setup.outputs.build-commands && needs.setup.outputs.build-artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: build
          path: ${{ needs.setup.outputs.build-artifact }}

  test:
    name: 🧪 Test
    if: inputs.checks == true && inputs.test == true
    runs-on: "ubuntu-latest"
    needs:
      - setup
      - build
    # FIXME: This is a workaround for having workflow ref. See https://github.com/orgs/community/discussions/38659
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: hoverkraft-tech/ci-github-common/actions/checkout@b4883995e100e291a1fed68678d47a560328ed08 # 0.24.0

      - if: needs.setup.outputs.build-artifact
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          name: build
          path: "/"
      # FIXME: This is a workaround for having workflow ref. See https://github.com/orgs/community/discussions/38659
      - id: oidc
        uses: ChristopherHX/oidc@73eee1ff03fdfce10eda179f617131532209edbd # v3
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          path: ./self-workflow
          repository: ${{ steps.oidc.outputs.job_workflow_repo_name_and_owner }}
          ref: ${{ steps.oidc.outputs.job_workflow_repo_ref }}
          sparse-checkout: |
            actions
      - run: |
          if [ -f .gitignore ]; then grep -q "self-workflow" .gitignore || echo "self-workflow" >> .gitignore; else echo "self-workflow" >> .gitignore; fi
          if [ -f .dockerignore ]; then grep -q "self-workflow" .dockerignore || echo "self-workflow" >> .dockerignore; else echo "self-workflow" >> .dockerignore; fi

      - id: setup-node
        uses: ./self-workflow/actions/setup-node
        with:
          working-directory: ${{ inputs.working-directory }}
          dependencies-cache: |
            nx
            jest

      - run: ${{ steps.setup-node.outputs.run-script-command }} test:ci
        working-directory: ${{ inputs.working-directory }}
        env:
          CI: "true"

      - name: 📊 Code coverage
        if: inputs.coverage == 'codecov'
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
        with:
          use_oidc: true
          disable_telem: true
