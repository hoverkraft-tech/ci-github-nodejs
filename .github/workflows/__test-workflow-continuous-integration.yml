name: Internal - Test Continuous integration workflow

on:
  workflow_call:

permissions:
  contents: read
  security-events: write
  # FIXME: This is a workaround for having workflow ref. See https://github.com/orgs/community/discussions/38659
  id-token: write

jobs:
  act-without-container:
    name: Act - Run the continuous integration workflow (without container)
    uses: ./.github/workflows/continuous-integration.yml
    with:
      working-directory: tests/npm
      build: |
        {
          "artifact": "dist"
        }

  assert-without-container:
    name: Assert - Ensure build artifact has been uploaded (without container)
    runs-on: ubuntu-latest
    needs: act-without-container
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: actions/download-artifact@018cc2cf5baa6db3ef3c5f8a56943fffe632ef53 # v6.0.0
        with:
          name: build
          path: "/"

      - name: Check the build artifacts
        run: test -f tests/npm/dist/test.txt

  arrange-with-container:
    permissions:
      id-token: write
      contents: read
      packages: write
      issues: read
      pull-requests: read
    uses: hoverkraft-tech/ci-github-container/.github/workflows/docker-build-images.yml@4f29319e02dd65152386c436e8c3136f380a0e71 # 0.28.0
    with:
      sign: false
      images: |
        [{
          "name": "ci-npm",
          "context": ".",
          "dockerfile": "./tests/npm/Dockerfile",
          "build-args": { "APP_PATH": "./tests/npm/" },
          "target": "ci",
          "platforms": ["linux/amd64"]
        }]
    secrets:
      oci-registry-password: ${{ secrets.GITHUB_TOKEN }}

  act-with-container:
    name: Act - Run the continuous integration workflow (with container)
    uses: ./.github/workflows/continuous-integration.yml
    needs: arrange-with-container
    with:
      container: ${{ fromJSON(needs.arrange-with-container.outputs.built-images).ci-npm.images[0] }}
      working-directory: /usr/src/app/
      build: |
        {
          "artifact": { "name": "build-in-container", "paths": "dist" }
        }

  assert-with-container:
    name: Assert - Ensure build artifact has been uploaded (with container)
    runs-on: ubuntu-latest
    needs: act-with-container
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: actions/download-artifact@018cc2cf5baa6db3ef3c5f8a56943fffe632ef53 # v6.0.0
        with:
          name: build-in-container
          path: ${{ runner.temp }}

      - name: Check the build artifacts
        run: test -f ${{ runner.temp }}/usr/src/app/dist/test.txt
